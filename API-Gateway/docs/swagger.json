{
    "swagger": "2.0",
    "info": {
        "description": "Freelance Marketplace.",
        "title": "GigForge",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "gigforge.jasim.online",
    "basePath": "/",
    "paths": {
        "/admin/category": {
            "post": {
                "security": [
                    {
                        "AdminAccessToken": []
                    }
                ],
                "description": "Add a new category with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add a new category",
                "parameters": [
                    {
                        "description": "Category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added category",
                        "schema": {
                            "$ref": "#/definitions/Job.AddCategoryRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "Authenticate an admin user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/skills": {
            "post": {
                "security": [
                    {
                        "AdminAccessToken": []
                    }
                ],
                "description": "Add a new skill with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add a new skill",
                "parameters": [
                    {
                        "description": "Skill details",
                        "name": "skill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddSkills"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added skill",
                        "schema": {
                            "$ref": "#/definitions/auth.AddSkillRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/user/block": {
            "put": {
                "security": [
                    {
                        "AdminAccessToken": []
                    }
                ],
                "description": "Block a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Block a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User blocked successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.BlockRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/user/unblock": {
            "put": {
                "security": [
                    {
                        "AdminAccessToken": []
                    }
                ],
                "description": "Unblock a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Unblock a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unblocked successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.BlockRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Request to reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Forgot password",
                "parameters": [
                    {
                        "description": "Request details",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset request successful",
                        "schema": {
                            "$ref": "#/definitions/auth.FPres"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate a user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/auth.UserLoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Reset user password using OTP and token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Request details",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ResetPassword"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "schema": {
                            "$ref": "#/definitions/auth.RPres"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed up",
                        "schema": {
                            "$ref": "#/definitions/auth.UserSignupRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Verify OTP for user authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verification details",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Verify"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verification successful",
                        "schema": {
                            "$ref": "#/definitions/auth.VerifyRes"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chat": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Establish a WebSocket connection for real-time chat messaging. This endpoint allows users to send and receive messages in real time.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "WebSocket Chat",
                "responses": {}
            }
        },
        "/chat/messages/{receiver_id}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Retrieve chat messages between the logged-in user and the specified receiver.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get Chat Messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/client/contracts": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get all contracts for a specific client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get all contracts for a client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved contracts",
                        "schema": {
                            "$ref": "#/definitions/Job.GetAllContractsForClientRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/contracts/attachment": {
            "post": {
                "description": "Add an attachment to a contract",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Add Contract Attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Contract Attachment",
                        "name": "attachment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Contract ID",
                        "name": "ContractID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Attachment Description",
                        "name": "Description",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/contracts/attachment/{contractID}": {
            "get": {
                "description": "Get all attachments for a contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get Attachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "contractID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/contracts/invoices/{contractID}": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get all invoices for a specific contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get all invoices of a contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "contractID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved invoices",
                        "schema": {
                            "$ref": "#/definitions/Job.GetInvoiceContractRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/contracts/{id}": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get details of a specific contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get a contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved contract",
                        "schema": {
                            "$ref": "#/definitions/Job.GetOneContractForClientRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/job": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get jobs posted by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get my jobs",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved jobs",
                        "schema": {
                            "$ref": "#/definitions/Job.GetMyJobsRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Create a new job listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Post a job",
                "parameters": [
                    {
                        "description": "Job details",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.PostJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully posted job",
                        "schema": {
                            "$ref": "#/definitions/Job.PostjobRes"
                        }
                    },
                    "400": {
                        "description": "Error validating request body",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/job/proposals/{id}": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get all proposals for a specific job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get proposals of a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved proposals",
                        "schema": {
                            "$ref": "#/definitions/Job.GJPRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/job/send-offer": {
            "post": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Send a job offer to a freelancer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Send a job offer",
                "parameters": [
                    {
                        "description": "Offer details",
                        "name": "offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.SendOffer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent offer",
                        "schema": {
                            "$ref": "#/definitions/Job.SendOfferRes"
                        }
                    },
                    "400": {
                        "description": "Error validating request body",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/job/{jobID}": {
            "put": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Edit an existing job listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Edit a job",
                "parameters": [
                    {
                        "description": "Job details",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.PostJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully edited job",
                        "schema": {
                            "$ref": "#/definitions/Job.PostjobRes"
                        }
                    },
                    "400": {
                        "description": "Error validating request body",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/profile": {
            "get": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Get the profile of a client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get client profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/client/profile/company-contacts": {
            "put": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Update the company contact details for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update company contact details",
                "parameters": [
                    {
                        "description": "Company Contact Details",
                        "name": "CompanyContact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateCompanyContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/client/profile/company-details": {
            "put": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Update the company details for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update company details",
                "parameters": [
                    {
                        "description": "Company Details",
                        "name": "CompanyDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.UpdateCompanyDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/client/projects/order/{id}": {
            "post": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Buy a specific project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Buy a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully bought project",
                        "schema": {
                            "$ref": "#/definitions/project.BuyProjectRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/review-freelancer": {
            "post": {
                "security": [
                    {
                        "ClientAccessToken": []
                    }
                ],
                "description": "Add a review for a freelancer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Add review for freelancer",
                "parameters": [
                    {
                        "description": "Review Details",
                        "name": "Review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/job/accept-offer/{offer_id}": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Accept a job offer from a client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Accept a job offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "offer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully accepted offer",
                        "schema": {
                            "$ref": "#/definitions/Job.AcceptOfferRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/job/invoice": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Send a weekly invoice for a contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Send an invoice",
                "parameters": [
                    {
                        "description": "Invoice details",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.SendInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent invoice",
                        "schema": {
                            "$ref": "#/definitions/Job.InvoiceRes"
                        }
                    },
                    "400": {
                        "description": "Error validating request body",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/job/offers": {
            "get": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Get all job offers for a specific freelancer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get job offers for a freelancer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved job offers",
                        "schema": {
                            "$ref": "#/definitions/Job.GetJobOfferForFreelancerRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/job/send-proposal": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Send a proposal for a job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Send a proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Proposal details",
                        "name": "proposal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Proposal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent proposal",
                        "schema": {
                            "$ref": "#/definitions/Job.ProposalRes"
                        }
                    },
                    "400": {
                        "description": "Error validating request body",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/profile": {
            "get": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Get the profile of a freelancer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get freelancer profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/description": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Add profile description for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Add profile description",
                "parameters": [
                    {
                        "description": "Profile Details",
                        "name": "Profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Update profile description for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile description",
                "parameters": [
                    {
                        "description": "Profile Details",
                        "name": "Profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/education": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Add education details for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Add education details",
                "parameters": [
                    {
                        "description": "Education Details",
                        "name": "Education",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Education"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/education/{id}": {
            "delete": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Delete education details for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Delete education details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Education ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Update education details for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update education details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Education ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Education Details",
                        "name": "Education",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Education"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/experience": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Add experience for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Add experience",
                "parameters": [
                    {
                        "description": "Experience Details",
                        "name": "Experience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Experience"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/experience/{id}": {
            "delete": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Remove experience for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Remove experience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Experience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Update experience for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update experience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Experience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Experience Details",
                        "name": "Experience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Experience"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/photo": {
            "put": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Update profile photo for the user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Profile Photo",
                        "name": "profile-photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/profile/skill": {
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Update skills for the user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update skills",
                "parameters": [
                    {
                        "description": "Skills Details",
                        "name": "Skills",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.Skills"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/freelancer/projects": {
            "get": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Get a list of projects posted by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "List my projects",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved projects",
                        "schema": {
                            "$ref": "#/definitions/project.ListMyProjectRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Create a new project listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Add a single project",
                "parameters": [
                    {
                        "description": "Project details",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddSingleProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added project",
                        "schema": {
                            "$ref": "#/definitions/project.AddSingleProjectRes"
                        }
                    },
                    "400": {
                        "description": "Error parsing request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/projects/{id}": {
            "patch": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Edit an existing project listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Edit a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project details",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddSingleProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully edited project",
                        "schema": {
                            "$ref": "#/definitions/project.EditSingleProjectRes"
                        }
                    },
                    "400": {
                        "description": "Error parsing request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/freelancer/projects/{projectID}": {
            "delete": {
                "security": [
                    {
                        "FreelancerAccessToken": []
                    }
                ],
                "description": "Remove an existing project listing",
                "tags": [
                    "projects"
                ],
                "summary": "Remove a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully removed project",
                        "schema": {
                            "$ref": "#/definitions/project.RemProjectRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/job/payment/execute": {
            "post": {
                "description": "Execute payment for a contract invoice",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Execute payment contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully executed payment",
                        "schema": {
                            "$ref": "#/definitions/Job.ExecutePaymentRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "description": "Get a list of all jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get all jobs",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved jobs",
                        "schema": {
                            "$ref": "#/definitions/Job.GetJobsRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/categories": {
            "get": {
                "description": "Get job categories based on a query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query string",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved categories",
                        "schema": {
                            "$ref": "#/definitions/Job.GetCategoryRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/payment": {
            "get": {
                "description": "Get details of a payment contract",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get payment contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment contract details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobs/payment/capture": {
            "post": {
                "description": "Capture payment for a contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Capture payment contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "paymentID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully captured payment",
                        "schema": {
                            "$ref": "#/definitions/Job.CapturePaymentRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/search": {
            "get": {
                "description": "Search for jobs based on various criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Search jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query string",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pay type",
                        "name": "t",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Hourly rate",
                        "name": "hourly_rate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fixed rate",
                        "name": "fixed_rate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "c",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved search results",
                        "schema": {
                            "$ref": "#/definitions/Job.SearchJobsRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "description": "Get details of a specific job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved job",
                        "schema": {
                            "$ref": "#/definitions/Job.GetJobRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get notifications for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/payment/add": {
            "post": {
                "description": "Add a PayPal payment email for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Add PayPal payment email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payment Details",
                        "name": "Payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.AddPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Get a list of all projects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "List all projects",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved projects",
                        "schema": {
                            "$ref": "#/definitions/project.ListProjectsRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/projects/payment": {
            "get": {
                "description": "Get details of a project payment",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project payment details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment project details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects/payment/capture": {
            "post": {
                "description": "Capture payment for a project order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Capture project payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "paymentID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully captured payment",
                        "schema": {
                            "$ref": "#/definitions/project.CapturePaymentRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/projects/payment/execute": {
            "post": {
                "description": "Execute payment for a project order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Execute project payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully executed payment",
                        "schema": {
                            "$ref": "#/definitions/project.ExecutePaymentRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Get details of a specific project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project",
                        "schema": {
                            "$ref": "#/definitions/project.ListOneProjectRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/{freelancer_id}": {
            "get": {
                "description": "Get reviews for a freelancer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get freelancer reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Freelancer ID",
                        "name": "freelancer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        },
        "/talents": {
            "get": {
                "description": "Get a list of talents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get talents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Experience",
                        "name": "exp",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/res.CommonRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Job.AcceptOfferRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.AddCategoryRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.CapturePaymentRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "Job.Category": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                }
            }
        },
        "Job.Contracts": {
            "type": "object",
            "properties": {
                "AttachmentUrl": {
                    "type": "string"
                },
                "Client_id": {
                    "type": "integer"
                },
                "Freelancer_id": {
                    "type": "integer"
                },
                "Job_description": {
                    "type": "string"
                },
                "Job_title": {
                    "type": "string"
                },
                "Start_date": {
                    "type": "string"
                },
                "Total_amount": {
                    "type": "number"
                },
                "contract_id": {
                    "type": "integer"
                },
                "contract_status": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pending_amount": {
                    "type": "number"
                }
            }
        },
        "Job.ExecutePaymentRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "PaymentID": {
                    "type": "string"
                },
                "merchantID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.GJPRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "Status": {
                    "type": "integer"
                },
                "prop": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Proposals"
                    }
                }
            }
        },
        "Job.GetAllContractsForClientRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Contracts"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.GetCategoryRes": {
            "type": "object",
            "properties": {
                "Categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Category"
                    }
                },
                "Error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.GetInvoiceContractRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Status": {
                    "type": "integer"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Invoices"
                    }
                }
            }
        },
        "Job.GetJobOfferForFreelancerRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Offer"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.GetJobRes": {
            "type": "object",
            "properties": {
                "Job": {
                    "$ref": "#/definitions/Job.Job"
                },
                "Status": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                }
            }
        },
        "Job.GetJobsRes": {
            "type": "object",
            "properties": {
                "Job": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Job"
                    }
                },
                "Status": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                }
            }
        },
        "Job.GetMyJobsRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Job"
                    }
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.GetOneContractForClientRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "contract": {
                    "$ref": "#/definitions/Job.Contracts"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.InvoiceRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.Invoices": {
            "type": "object",
            "properties": {
                "EndDate": {
                    "type": "string"
                },
                "FreelancerFee": {
                    "type": "number"
                },
                "InvoiceID": {
                    "type": "integer"
                },
                "MarketPlaceFee": {
                    "type": "number"
                },
                "PaymentStatus": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "TotalAmount": {
                    "type": "number"
                },
                "contractID": {
                    "type": "integer"
                }
            }
        },
        "Job.Job": {
            "type": "object",
            "properties": {
                "Budget": {
                    "type": "number"
                },
                "Category": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "TimePeriod": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Job.Offer": {
            "type": "object",
            "properties": {
                "Starting_time": {
                    "type": "string"
                },
                "budget": {
                    "type": "number"
                },
                "client_id": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "offer_id": {
                    "type": "number"
                },
                "offer_letter": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "Job.PostjobRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.ProposalRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.Proposals": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "number"
                },
                "coverletter": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "Job.SearchJobsRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job.Job"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "Job.SendOfferRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.AddSkillRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.BlockRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.FPres": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.LoginRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.RPres": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "auth.UserLoginRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.UserSignupRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.VerifyRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.AddSingleProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.BuyProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.CapturePaymentRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "project.EditSingleProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.ExecutePaymentRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "PaymentID": {
                    "type": "string"
                },
                "merchantID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.ListMyProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Project": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.Project"
                    }
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.ListOneProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/project.Project"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.ListProjectsRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "project": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.Project"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.Project": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Price": {
                    "type": "number"
                },
                "Title": {
                    "type": "string"
                },
                "delivery_days": {
                    "type": "integer"
                },
                "number_of_revisions": {
                    "type": "integer"
                }
            }
        },
        "project.RemProjectRes": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Response": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "req.AddCategory": {
            "type": "object",
            "required": [
                "category"
            ],
            "properties": {
                "category": {
                    "type": "string"
                }
            }
        },
        "req.AddPayment": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "req.AddReview": {
            "type": "object",
            "required": [
                "freelancer_id",
                "rating",
                "review"
            ],
            "properties": {
                "freelancer_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "review": {
                    "type": "string"
                }
            }
        },
        "req.AddSingleProject": {
            "type": "object",
            "required": [
                "Description",
                "category",
                "title"
            ],
            "properties": {
                "Delivery days": {
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "Number_of_revisions": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "req.AddSkills": {
            "type": "object",
            "required": [
                "description",
                "skill"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "skill": {
                    "type": "string"
                }
            }
        },
        "req.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "pinCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "req.Education": {
            "type": "object",
            "required": [
                "Course",
                "area_of_study",
                "date_ended",
                "date_started",
                "description",
                "school"
            ],
            "properties": {
                "Course": {
                    "type": "string"
                },
                "area_of_study": {
                    "type": "string"
                },
                "date_ended": {
                    "type": "string"
                },
                "date_started": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "school": {
                    "type": "string"
                }
            }
        },
        "req.Experience": {
            "type": "object",
            "required": [
                "city",
                "company",
                "country",
                "description",
                "from-date",
                "title",
                "to-date"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "from-date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "to-date": {
                    "type": "string"
                }
            }
        },
        "req.ForgotPassword": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "req.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "req.PostJob": {
            "type": "object",
            "required": [
                "Description",
                "budget",
                "category",
                "skills",
                "time-period",
                "title",
                "type"
            ],
            "properties": {
                "Description": {
                    "type": "string"
                },
                "budget": {
                    "type": "number"
                },
                "category": {
                    "type": "integer"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "time-period": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "req.Profile": {
            "type": "object",
            "required": [
                "Title",
                "description",
                "hourly_rate"
            ],
            "properties": {
                "Title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hourly_rate": {
                    "type": "integer"
                }
            }
        },
        "req.Proposal": {
            "type": "object"
        },
        "req.ResetPassword": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "req.SendInvoice": {
            "type": "object",
            "properties": {
                "Hours_worked": {
                    "type": "integer"
                },
                "contractID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "week_ending_date": {
                    "type": "string"
                },
                "week_starting_date": {
                    "type": "string"
                }
            }
        },
        "req.SendOffer": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "number"
                },
                "freelancer_id": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "offer_letter": {
                    "type": "string"
                },
                "starting_time": {
                    "type": "string"
                }
            }
        },
        "req.SignupRequest": {
            "type": "object",
            "required": [
                "country",
                "email",
                "firstname",
                "lastname",
                "password",
                "phone"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "req.Skills": {
            "type": "object",
            "required": [
                "skills"
            ],
            "properties": {
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "req.UpdateCompanyContact": {
            "type": "object",
            "properties": {
                "OwnerName": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/req.Address"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "req.UpdateCompanyDetails": {
            "type": "object",
            "properties": {
                "NumberOfEmployees": {
                    "type": "integer"
                },
                "company": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "req.Verify": {
            "type": "object",
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "integer"
                }
            }
        },
        "res.CommonRes": {
            "type": "object",
            "properties": {
                "body": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminAccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "ClientAccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "FreelancerAccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}